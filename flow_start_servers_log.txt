ImageRepo: Initializing repository
	[demo/demo_image_repo.py]	>>Function:  [clean_slate()]: Creating target files for [u'file1.txt', u'infotainment_firmware.txt']
	[demo/demo_image_repo.py]	>>Function:  [clean_slate()]: Removing files: /home/joan/Escriptori/TFM/TFM/imagerepo/targets
	[demo/demo_image_repo.py]	>>Function:  [clean_slate()]: Creating directories: /home/joan/Escriptori/TFM/TFM/imagerepo/targets
	[demo/demo_image_repo.py]	>>Function:  [clean_slate()]: Writing content for: [u'file1.txt', u'infotainment_firmware.txt']
	[demo/demo_image_repo.py]	>>Function:  [clean_slate()]: Target --> file1.txt
	[demo/demo_image_repo.py]	>>Function:  [clean_slate()]: Target --> infotainment_firmware.txt
	[demo/demo_image_repo.py]	>>Function:  [clean_slate()]: Creating new repository at: imagerepo
	--------> [tuf/repository_tool.py]
			>>Function:  Checking format for: imagerepo

	--------> [tuf/repository_tool.py]
			>>Function:  Setting the repository, metadata (as None) and targets direcotires (as None) for: imagerepo

	--------> [tuf/repository_tool.py]
			>>Function:  Creating repository: /home/joan/Escriptori/TFM/TFM/imagerepo

Creating u'/home/joan/Escriptori/TFM/TFM/imagerepo'
	--------> [tuf/repository_tool.py]
			>>Function:  Setting the metadata and targets directories: 
				metadata:metadata.staged
				targets:targets

	--------> [tuf/repository_tool.py]
			>>Function:  Creating the metadata directory that will hold all of the metadata files, such as 'root.json' at:
				/home/joan/Escriptori/TFM/TFM/imagerepo/metadata.staged

Creating u'/home/joan/Escriptori/TFM/TFM/imagerepo/metadata.staged'
	--------> [tuf/repository_tool.py]
			>>Function:  Creating the targets directory that will hold all of the targets files at:
				/home/joan/Escriptori/TFM/TFM/imagerepo/targets

Creating u'/home/joan/Escriptori/TFM/TFM/imagerepo/targets'
	--------> [tuf/repository_tool.py]
			>>Function:  Create the bare bones repository object, where only top-level roles have been set and contain default values (e.g., Root roles has a threshold of 1, expires 1 year into the future, etc...)

	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for repository_directory:  /home/joan/Escriptori/TFM/TFM/imagerepo
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for metadata_directory:  /home/joan/Escriptori/TFM/TFM/imagerepo/metadata.staged
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for targets_directory:  /home/joan/Escriptori/TFM/TFM/imagerepo/targets
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for repository_name:  default
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Setting the top-level roles
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for self._rolename:  root
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for self._repository_name:  default
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for rolename:  root
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for roleinfo:  {u'partial_loaded': False, u'signatures': [], u'consistent_snapshot': False, u'version': 0, u'keyids': [], u'threshold': 1, u'compressions': [u''], u'expires': u'2021-01-30T22:59:25Z', u'signing_keyids': []}
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for repository_name:  default
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for self.root:  <tuf.repository_tool.Root object at 0x7f27de8ee790>
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for rolename:  snapshot
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for roleinfo:  {u'partial_loaded': False, u'signatures': [], u'version': 0, u'keyids': [], u'threshold': 1, u'compressions': [u''], u'expires': u'2020-02-07T17:11:05Z', u'signing_keyids': []}
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for repository_name:  default
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for self.snapshot:  <tuf.repository_tool.Snapshot object at 0x7f27de8ee890>
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for rolename:  timestamp
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for roleinfo:  {u'partial_loaded': False, u'signatures': [], u'version': 0, u'keyids': [], u'threshold': 1, u'compressions': [u''], u'expires': u'2020-02-01T17:11:05Z', u'signing_keyids': []}
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for repository_name:  default
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for self.timestamp:  <tuf.repository_tool.Timestamp object at 0x7f27de8ee8d0>
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for rolename:  targets
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for roleinfo:  {u'signatures': [], u'keyids': [], u'expires': u'2020-05-02T00:38:15Z', u'threshold': 1, u'signing_keyids': [], u'paths': {}, u'partial_loaded': False, u'version': 0, u'compressions': [u''], u'delegations': {u'keys': {}, u'roles': []}, u'path_hash_prefixes': []}
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for repository_name:  default
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for self.targets:  <tuf.repository_tool.Targets object at 0x7f27de8ee910>
ImageRepo: Loading all keys
	[demo/demo_image_repo.py]	>>Function:  [clean_slate()]: Create keys and/or load keys into memory.
		[use_new_keys] = False
	[demo/demo_image_repo.py]	>>Function:  [clean_slate()]: Loading keys...
	-------->[demo/__init__.py]
			>>Action Perfomed:  Calling rt.import_ed25519_publickey_from_file

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Checking format for
				/home/joan/Escriptori/TFM/TFM/demo/keys/mainroot.pub

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  ED25519 key objects are saved in .json and metadata format.
				Return the loaded key object in tuf.formats.ED25519KEY_SCHEMA format that also includes the keyid

	-------- --------> [tuf/util.py]
			>>Action Perfomed:  Checking format of: /home/joan/Escriptori/TFM/TFM/demo/keys/mainroot.pub

	-------- --------> [tuf/util.py]
			>>Action Perfomed:   Checking whether the file is mostly likely gzipped: False 

	-------- --------> [tuf/util.py]
			>>Action Perfomed:   Loading: <open file u'/home/joan/Escriptori/TFM/TFM/demo/keys/mainroot.pub', mode 'r' at 0x7f27dedf4ed0> 

	-------- --------> [tuf/util.py]
			>>Action Perfomed:   Loading json: {u'keytype': u'ed25519', u'keyid_hash_algorithms': [u'sha256', u'sha512'], u'keyval': {u'public': u'f4ac8d95cfdf65a4ccaee072ba5a48e8ad6a0c30be6ffd525aec6bc078211033'}} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   ed25519_key_metadata:  
				 {u'keytype': u'ed25519', u'keyid_hash_algorithms': [u'sha256', u'sha512'], u'keyval': {u'public': u'f4ac8d95cfdf65a4ccaee072ba5a48e8ad6a0c30be6ffd525aec6bc078211033'}} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   ed25519_key:  
				 {u'keyval': {u'public': u'f4ac8d95cfdf65a4ccaee072ba5a48e8ad6a0c30be6ffd525aec6bc078211033'}, u'keytype': u'ed25519', u'keyid': '94c836f0c45168f0a437eef0e487b910f58db4d462ae457b5730a4487130f290', u'keyid_hash_algorithms': [u'sha256', u'sha512']} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   junk:  
				 set(['94c836f0c45168f0a437eef0e487b910f58db4d462ae457b5730a4487130f290', '0b8c67edcf307f5bdc30ebc441086fe58f9320f4b5e04f2cefbfa8998868d32d85a17da47691db4e6fb2f3440ca9a03b69d07588a32c5f555f769c0a21351648']) 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Returning the key: {u'keyval': {u'public': u'f4ac8d95cfdf65a4ccaee072ba5a48e8ad6a0c30be6ffd525aec6bc078211033'}, u'keytype': u'ed25519', u'keyid': '94c836f0c45168f0a437eef0e487b910f58db4d462ae457b5730a4487130f290', u'keyid_hash_algorithms': [u'sha256', u'sha512']}
	[demo/demo_image_repo.py]	>>Function:  [clean_slate()]: [key_root_pub]
				 keyval
					 public f4ac8d95cfdf65a4ccaee072ba5a48e8ad6a0c30be6ffd525aec6bc078211033
				 keytype ed25519
				 keyid 94c836f0c45168f0a437eef0e487b910f58db4d462ae457b5730a4487130f290
				 keyid_hash_algorithms [u'sha256', u'sha512']
	-------->[demo/__init__.py]
			>>Action Perfomed:  Calling rt.import_ed25519_privatekey_from_file

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Checking format for
				/home/joan/Escriptori/TFM/TFM/demo/keys/mainroot
				Password? pw

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Checking password: 'pw' have the correct format

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Store the encrypted contents of '/home/joan/Escriptori/TFM/TFM/demo/keys/mainroot' prior to calling the decryption routine

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Encrypted content of: '/home/joan/Escriptori/TFM/TFM/demo/keys/mainroot': 
				51075d30033b3b952cdba36bf2f0b6d8@@@@100000@@@@e32a19473754896ae175b6aea30cc9703bc8fc34acc40809ee890f8351815b58@@@@e2e82069cae0ec30789fad039385af60@@@@48e67f6481ab927dca5b9925ed31ea4eb9711cb4acfe7bd8ec4530366fc73a1e3d7146c0642fb8f76bd127cda78ff9df06c661b871553d0ed8d136aff2305b154b8b937e010c5edb311bb16e227b9dfbda5c21a2175e8c04c2750660f42a2b5f17059695ebaebdf0066a064cc90cc2b93d90a4c2e77b13fd2551e74046fa9e3dd90f2449ddbb21a5a66b86c5faea3c870abf8b690ba961f91a6d3344e7965de103e8a815a43e0214867d5ab2bfbbfbbcf241c00885cdcd1633b0af9e0d2084b6a9499c3d0a494f29da17b5a4db801da077f731ce7276974d4e7023d9fc596ff2bb0b573e2c88d5226ecfc0fea366069bf4e948512839be0938d6be9d52eb9fb639c5f1fd721ce1f4c79915fe

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   Decrypted content of: ' /home/joan/Escriptori/TFM/TFM/demo/keys/mainroot ':  {u'keytype': u'ed25519', u'keyid': u'94c836f0c45168f0a437eef0e487b910f58db4d462ae457b5730a4487130f290', u'keyval': {u'public': u'f4ac8d95cfdf65a4ccaee072ba5a48e8ad6a0c30be6ffd525aec6bc078211033', u'private': u'879d244c6720361cf1f038a84082b08ac9cd586c32c1c9c6153f6db61b474957'}} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   Checking that 'keytype' equals to 'ed25519' 

	[demo/demo_image_repo.py]	>>Function:  [clean_slate()]: [key_root_pri]
				 keytype ed25519
				 keyid 94c836f0c45168f0a437eef0e487b910f58db4d462ae457b5730a4487130f290
				 keyval
					 public f4ac8d95cfdf65a4ccaee072ba5a48e8ad6a0c30be6ffd525aec6bc078211033
					 private 879d244c6720361cf1f038a84082b08ac9cd586c32c1c9c6153f6db61b474957
	-------->[demo/__init__.py]
			>>Action Perfomed:  Calling rt.import_ed25519_publickey_from_file

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Checking format for
				/home/joan/Escriptori/TFM/TFM/demo/keys/maintimestamp.pub

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  ED25519 key objects are saved in .json and metadata format.
				Return the loaded key object in tuf.formats.ED25519KEY_SCHEMA format that also includes the keyid

	-------- --------> [tuf/util.py]
			>>Action Perfomed:  Checking format of: /home/joan/Escriptori/TFM/TFM/demo/keys/maintimestamp.pub

	-------- --------> [tuf/util.py]
			>>Action Perfomed:   Checking whether the file is mostly likely gzipped: False 

	-------- --------> [tuf/util.py]
			>>Action Perfomed:   Loading: <open file u'/home/joan/Escriptori/TFM/TFM/demo/keys/maintimestamp.pub', mode 'r' at 0x7f27dedf4ed0> 

	-------- --------> [tuf/util.py]
			>>Action Perfomed:   Loading json: {u'keytype': u'ed25519', u'keyid_hash_algorithms': [u'sha256', u'sha512'], u'keyval': {u'public': u'97c1112bbd9047b1fdb50dd638bfed6d0639e0dff2c1443f5593fea40e30f654'}} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   ed25519_key_metadata:  
				 {u'keytype': u'ed25519', u'keyid_hash_algorithms': [u'sha256', u'sha512'], u'keyval': {u'public': u'97c1112bbd9047b1fdb50dd638bfed6d0639e0dff2c1443f5593fea40e30f654'}} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   ed25519_key:  
				 {u'keyval': {u'public': u'97c1112bbd9047b1fdb50dd638bfed6d0639e0dff2c1443f5593fea40e30f654'}, u'keytype': u'ed25519', u'keyid': '6fcd9a928358ad8ca7e946325f57ec71d50cb5977a8d02c5ab0de6765fef040a', u'keyid_hash_algorithms': [u'sha256', u'sha512']} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   junk:  
				 set(['6fcd9a928358ad8ca7e946325f57ec71d50cb5977a8d02c5ab0de6765fef040a', 'deb7ea2937f68b7f4067593fedf0004858c48c44f7195a72da7239fe558b32f824ef4db756cefe8be61ae483fa2c4d6dcb0286f0dd9edc7a7f8f496a5999e2d1']) 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Returning the key: {u'keyval': {u'public': u'97c1112bbd9047b1fdb50dd638bfed6d0639e0dff2c1443f5593fea40e30f654'}, u'keytype': u'ed25519', u'keyid': '6fcd9a928358ad8ca7e946325f57ec71d50cb5977a8d02c5ab0de6765fef040a', u'keyid_hash_algorithms': [u'sha256', u'sha512']}
	[demo/demo_image_repo.py]	>>Function:  [clean_slate()]: [key_timestamp_pub]
				 keyval
					 public 97c1112bbd9047b1fdb50dd638bfed6d0639e0dff2c1443f5593fea40e30f654
				 keytype ed25519
				 keyid 6fcd9a928358ad8ca7e946325f57ec71d50cb5977a8d02c5ab0de6765fef040a
				 keyid_hash_algorithms [u'sha256', u'sha512']
	-------->[demo/__init__.py]
			>>Action Perfomed:  Calling rt.import_ed25519_privatekey_from_file

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Checking format for
				/home/joan/Escriptori/TFM/TFM/demo/keys/maintimestamp
				Password? pw

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Checking password: 'pw' have the correct format

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Store the encrypted contents of '/home/joan/Escriptori/TFM/TFM/demo/keys/maintimestamp' prior to calling the decryption routine

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Encrypted content of: '/home/joan/Escriptori/TFM/TFM/demo/keys/maintimestamp': 
				f4b7d6888e9eae79b4a9bf69400b22b9@@@@100000@@@@913ebfb85ae3683249dd7e8b6719d75d6b34e1e9f9720c39ecc1e7c3d9f58eae@@@@ac7acf8d588bbe84a0e3597aa3a91e2e@@@@d8a122717ffb34ffd41bb6b7b64392e56857a36adfcbe32a6ee51dcf808a130e3db5166a96402a23bf7f1c1e3bd87d7271a9568e15f6d9a9b47619f1c4be293dd70239836b56f8f35916a02b89fdf6fe0ae586a43b468a87b7af6228380689acf6b2ad5c3633e2b2d2463ea8b7e4f4c7ffb7912d50768c3de91aa0f24d12e93e7f2bcfc0160c0de8ec48e7131c1916cfed06691e02e46a4a13c17bf1adf4373464da150b8a84f4da7b701121b019d4a8a5b86382e677cca35e961ee2a970621367387ca8dea1187e92ed97715c51f25f1365da3595cb4b20951d60304d47087eee3fad262fe38cf5e31b8b2b65026ee6fd6399b771c6996349e2fd1d208d5651bf62252c74bf46083ad57647

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   Decrypted content of: ' /home/joan/Escriptori/TFM/TFM/demo/keys/maintimestamp ':  {u'keytype': u'ed25519', u'keyid': u'6fcd9a928358ad8ca7e946325f57ec71d50cb5977a8d02c5ab0de6765fef040a', u'keyval': {u'public': u'97c1112bbd9047b1fdb50dd638bfed6d0639e0dff2c1443f5593fea40e30f654', u'private': u'ef373ea36a633a0044bbca19a298a4100e7f353461d7fe546e0ec299ac1b659e'}} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   Checking that 'keytype' equals to 'ed25519' 

	[demo/demo_image_repo.py]	>>Function:  [clean_slate()]: [key_timestamp_pri]
				 keytype ed25519
				 keyid 6fcd9a928358ad8ca7e946325f57ec71d50cb5977a8d02c5ab0de6765fef040a
				 keyval
					 public 97c1112bbd9047b1fdb50dd638bfed6d0639e0dff2c1443f5593fea40e30f654
					 private ef373ea36a633a0044bbca19a298a4100e7f353461d7fe546e0ec299ac1b659e
	-------->[demo/__init__.py]
			>>Action Perfomed:  Calling rt.import_ed25519_publickey_from_file

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Checking format for
				/home/joan/Escriptori/TFM/TFM/demo/keys/mainsnapshot.pub

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  ED25519 key objects are saved in .json and metadata format.
				Return the loaded key object in tuf.formats.ED25519KEY_SCHEMA format that also includes the keyid

	-------- --------> [tuf/util.py]
			>>Action Perfomed:  Checking format of: /home/joan/Escriptori/TFM/TFM/demo/keys/mainsnapshot.pub

	-------- --------> [tuf/util.py]
			>>Action Perfomed:   Checking whether the file is mostly likely gzipped: False 

	-------- --------> [tuf/util.py]
			>>Action Perfomed:   Loading: <open file u'/home/joan/Escriptori/TFM/TFM/demo/keys/mainsnapshot.pub', mode 'r' at 0x7f27dedf4ed0> 

	-------- --------> [tuf/util.py]
			>>Action Perfomed:   Loading json: {u'keytype': u'ed25519', u'keyid_hash_algorithms': [u'sha256', u'sha512'], u'keyval': {u'public': u'497f62d80e5b892718da8788bb549bcf8369a1460ec23d6d67d0ca099a8e8f83'}} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   ed25519_key_metadata:  
				 {u'keytype': u'ed25519', u'keyid_hash_algorithms': [u'sha256', u'sha512'], u'keyval': {u'public': u'497f62d80e5b892718da8788bb549bcf8369a1460ec23d6d67d0ca099a8e8f83'}} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   ed25519_key:  
				 {u'keyval': {u'public': u'497f62d80e5b892718da8788bb549bcf8369a1460ec23d6d67d0ca099a8e8f83'}, u'keytype': u'ed25519', u'keyid': 'aaf05f8d054f8068bf6cb46beed7c824e2560802df462fc8681677586582ca99', u'keyid_hash_algorithms': [u'sha256', u'sha512']} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   junk:  
				 set(['aaf05f8d054f8068bf6cb46beed7c824e2560802df462fc8681677586582ca99', '43aee7e76e88246ea88931fd9df636c3e0851b448860bb1b3d8f4e066641e2523d3e46c1074226d6f9877c57024a9f3ff05bf3cc8c7377933078e1a6c0bf027c']) 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Returning the key: {u'keyval': {u'public': u'497f62d80e5b892718da8788bb549bcf8369a1460ec23d6d67d0ca099a8e8f83'}, u'keytype': u'ed25519', u'keyid': 'aaf05f8d054f8068bf6cb46beed7c824e2560802df462fc8681677586582ca99', u'keyid_hash_algorithms': [u'sha256', u'sha512']}
	[demo/demo_image_repo.py]	>>Function:  [clean_slate()]: [key_snapshot_pub]
				 keyval
					 public 497f62d80e5b892718da8788bb549bcf8369a1460ec23d6d67d0ca099a8e8f83
				 keytype ed25519
				 keyid aaf05f8d054f8068bf6cb46beed7c824e2560802df462fc8681677586582ca99
				 keyid_hash_algorithms [u'sha256', u'sha512']
	-------->[demo/__init__.py]
			>>Action Perfomed:  Calling rt.import_ed25519_privatekey_from_file

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Checking format for
				/home/joan/Escriptori/TFM/TFM/demo/keys/mainsnapshot
				Password? pw

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Checking password: 'pw' have the correct format

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Store the encrypted contents of '/home/joan/Escriptori/TFM/TFM/demo/keys/mainsnapshot' prior to calling the decryption routine

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Encrypted content of: '/home/joan/Escriptori/TFM/TFM/demo/keys/mainsnapshot': 
				33a15998fc362bdf522b3c4ee8481a80@@@@100000@@@@175d54f89e44ed70721f538fcaa3129d2d52f454cfd390af15e7a85a10d3a12b@@@@4827c6d8545f36aa1f2f9ff3864dedba@@@@43af2d1f11b4f97dc859acc0b23a4885d62256aa2096af12727b3936a8ab647a7036b7d5eb35f870e9db8db2c7cf7930d4df11bb62ed870a3fe604175027bfa4084808bf5b2188294181977114c1d049075074ce3ba19f80c434846a319f2cbd5b49484af81ae0d953e38d57abc4720e1fb33bc8d83d33ed30791054bbea463730cce688b11d8d4f6945a11d75d5a614d549a3418e43d9b5a65405959c8b235bcecf2f383c5326f4e688860d46a0b878652c2ab05c2446af161e20928bc0bb2a597d7c17451d43216206b33f73d7d2a9c6de33fcbc49ddfad295f2ce193ce141cfefa1f5d79804ace174090a33da982164e08b8c39dbc4f78e6ab1408ad09c9473b1144fe203ea04af6d42f8

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   Decrypted content of: ' /home/joan/Escriptori/TFM/TFM/demo/keys/mainsnapshot ':  {u'keytype': u'ed25519', u'keyid': u'aaf05f8d054f8068bf6cb46beed7c824e2560802df462fc8681677586582ca99', u'keyval': {u'public': u'497f62d80e5b892718da8788bb549bcf8369a1460ec23d6d67d0ca099a8e8f83', u'private': u'f559b6e50414c6e42f4474675deb2ed0a43f1028354ef4541f4f3af15e4ebe09'}} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   Checking that 'keytype' equals to 'ed25519' 

	[demo/demo_image_repo.py]	>>Function:  [clean_slate()]: [key_snapshot_pri]
				 keytype ed25519
				 keyid aaf05f8d054f8068bf6cb46beed7c824e2560802df462fc8681677586582ca99
				 keyval
					 public 497f62d80e5b892718da8788bb549bcf8369a1460ec23d6d67d0ca099a8e8f83
					 private f559b6e50414c6e42f4474675deb2ed0a43f1028354ef4541f4f3af15e4ebe09
	-------->[demo/__init__.py]
			>>Action Perfomed:  Calling rt.import_ed25519_publickey_from_file

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Checking format for
				/home/joan/Escriptori/TFM/TFM/demo/keys/maintargets.pub

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  ED25519 key objects are saved in .json and metadata format.
				Return the loaded key object in tuf.formats.ED25519KEY_SCHEMA format that also includes the keyid

	-------- --------> [tuf/util.py]
			>>Action Perfomed:  Checking format of: /home/joan/Escriptori/TFM/TFM/demo/keys/maintargets.pub

	-------- --------> [tuf/util.py]
			>>Action Perfomed:   Checking whether the file is mostly likely gzipped: False 

	-------- --------> [tuf/util.py]
			>>Action Perfomed:   Loading: <open file u'/home/joan/Escriptori/TFM/TFM/demo/keys/maintargets.pub', mode 'r' at 0x7f27dedf4ed0> 

	-------- --------> [tuf/util.py]
			>>Action Perfomed:   Loading json: {u'keytype': u'ed25519', u'keyid_hash_algorithms': [u'sha256', u'sha512'], u'keyval': {u'public': u'729d9cb5f74688ef8e9a22fae1516f33ff98c7910b64bf3b66e6cfc51559840e'}} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   ed25519_key_metadata:  
				 {u'keytype': u'ed25519', u'keyid_hash_algorithms': [u'sha256', u'sha512'], u'keyval': {u'public': u'729d9cb5f74688ef8e9a22fae1516f33ff98c7910b64bf3b66e6cfc51559840e'}} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   ed25519_key:  
				 {u'keyval': {u'public': u'729d9cb5f74688ef8e9a22fae1516f33ff98c7910b64bf3b66e6cfc51559840e'}, u'keytype': u'ed25519', u'keyid': 'c24b457b2ca4b3c2f415efdbbebb914a0d05c5345b9889bda044362589d6f596', u'keyid_hash_algorithms': [u'sha256', u'sha512']} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   junk:  
				 set(['af583431e6fd4ea9e8c0743aa7d8132d6a8f5c0a9dc44e60766d0dd7e3691055635b78065b4821a01f8a02d58fc24202ebaa3c3a9e3bc2acaf12b7301b214756', 'c24b457b2ca4b3c2f415efdbbebb914a0d05c5345b9889bda044362589d6f596']) 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Returning the key: {u'keyval': {u'public': u'729d9cb5f74688ef8e9a22fae1516f33ff98c7910b64bf3b66e6cfc51559840e'}, u'keytype': u'ed25519', u'keyid': 'c24b457b2ca4b3c2f415efdbbebb914a0d05c5345b9889bda044362589d6f596', u'keyid_hash_algorithms': [u'sha256', u'sha512']}
	[demo/demo_image_repo.py]	>>Function:  [clean_slate()]: [key_targets_pub]
				 keyval
					 public 729d9cb5f74688ef8e9a22fae1516f33ff98c7910b64bf3b66e6cfc51559840e
				 keytype ed25519
				 keyid c24b457b2ca4b3c2f415efdbbebb914a0d05c5345b9889bda044362589d6f596
				 keyid_hash_algorithms [u'sha256', u'sha512']
	-------->[demo/__init__.py]
			>>Action Perfomed:  Calling rt.import_ed25519_privatekey_from_file

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Checking format for
				/home/joan/Escriptori/TFM/TFM/demo/keys/maintargets
				Password? pw

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Checking password: 'pw' have the correct format

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Store the encrypted contents of '/home/joan/Escriptori/TFM/TFM/demo/keys/maintargets' prior to calling the decryption routine

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Encrypted content of: '/home/joan/Escriptori/TFM/TFM/demo/keys/maintargets': 
				62d6f0c5a07a923158d2d580f0b91f0e@@@@100000@@@@8122d4686a071f15eae9b079971d7221b88c8d19e659d01dc6922c7afabc933f@@@@1e6e8faa2b58f9d340cc21784b86f632@@@@d2cd021295d84c65448807fc2101719d508c4c03c43e5c07d27b947897ba81b9357dab3d92d95d9c49bc576e1416e5db952b0e12876c5c98ba0ab5f5862fb0c13c73c329771871be70aa1a5ad152a36813678dee7a32b13f6dcf8e5e11e3b7eb01479887da5630cbc639574b8b2b410ae033730161327948a4f0dcbc7019b8d312b6fa300439096cf33b4fef48f4761e48cb5c7f044bf292f8321cf80cb9508ad644c3ec06f4ea77991f1dec62e911f3404b19881c32264ed66106eff5eb579fa6f982faf3cccfbb202105e240c7ff188dc88df36dce4f739fd90fada515b2a197f993b19390127d03e070fb938ab62be0b534c871b0367ac16ed1054b8c3108e9ab6686088fa702ad868029

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   Decrypted content of: ' /home/joan/Escriptori/TFM/TFM/demo/keys/maintargets ':  {u'keytype': u'ed25519', u'keyid': u'c24b457b2ca4b3c2f415efdbbebb914a0d05c5345b9889bda044362589d6f596', u'keyval': {u'public': u'729d9cb5f74688ef8e9a22fae1516f33ff98c7910b64bf3b66e6cfc51559840e', u'private': u'1c7b6e113c64bdd3e5123f6bbd8572c3ea23e8d5dffa9868cf380958f3aa642f'}} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   Checking that 'keytype' equals to 'ed25519' 

	[demo/demo_image_repo.py]	>>Function:  [clean_slate()]: [key_targets_pri]
				 keytype ed25519
				 keyid c24b457b2ca4b3c2f415efdbbebb914a0d05c5345b9889bda044362589d6f596
				 keyval
					 public 729d9cb5f74688ef8e9a22fae1516f33ff98c7910b64bf3b66e6cfc51559840e
					 private 1c7b6e113c64bdd3e5123f6bbd8572c3ea23e8d5dffa9868cf380958f3aa642f
	-------->[demo/__init__.py]
			>>Action Perfomed:  Calling rt.import_ed25519_publickey_from_file

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Checking format for
				/home/joan/Escriptori/TFM/TFM/demo/keys/mainrole1.pub

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  ED25519 key objects are saved in .json and metadata format.
				Return the loaded key object in tuf.formats.ED25519KEY_SCHEMA format that also includes the keyid

	-------- --------> [tuf/util.py]
			>>Action Perfomed:  Checking format of: /home/joan/Escriptori/TFM/TFM/demo/keys/mainrole1.pub

	-------- --------> [tuf/util.py]
			>>Action Perfomed:   Checking whether the file is mostly likely gzipped: False 

	-------- --------> [tuf/util.py]
			>>Action Perfomed:   Loading: <open file u'/home/joan/Escriptori/TFM/TFM/demo/keys/mainrole1.pub', mode 'r' at 0x7f27dedf4ed0> 

	-------- --------> [tuf/util.py]
			>>Action Perfomed:   Loading json: {u'keytype': u'ed25519', u'keyid_hash_algorithms': [u'sha256', u'sha512'], u'keyval': {u'public': u'c5a78db3f3ba96462525664e502f2e7893b81e7e270d75ffb9a6bb95b56857ca'}} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   ed25519_key_metadata:  
				 {u'keytype': u'ed25519', u'keyid_hash_algorithms': [u'sha256', u'sha512'], u'keyval': {u'public': u'c5a78db3f3ba96462525664e502f2e7893b81e7e270d75ffb9a6bb95b56857ca'}} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   ed25519_key:  
				 {u'keyval': {u'public': u'c5a78db3f3ba96462525664e502f2e7893b81e7e270d75ffb9a6bb95b56857ca'}, u'keytype': u'ed25519', u'keyid': '8650aed05799a74f5febc9070c5d3e58d62797662d48062614b1ce0a643ee368', u'keyid_hash_algorithms': [u'sha256', u'sha512']} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   junk:  
				 set(['8650aed05799a74f5febc9070c5d3e58d62797662d48062614b1ce0a643ee368', '584f04b21620838484d05f565e28c86758b517a837aa7bb0a64b5284f3b43e84dea4a5151f1b00247b8123ef88766a9a8270b0a0a875433b0fc0608496f294b8']) 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Returning the key: {u'keyval': {u'public': u'c5a78db3f3ba96462525664e502f2e7893b81e7e270d75ffb9a6bb95b56857ca'}, u'keytype': u'ed25519', u'keyid': '8650aed05799a74f5febc9070c5d3e58d62797662d48062614b1ce0a643ee368', u'keyid_hash_algorithms': [u'sha256', u'sha512']}
	[demo/demo_image_repo.py]	>>Function:  [clean_slate()]: [key_role1_pub]
				 keyval
					 public c5a78db3f3ba96462525664e502f2e7893b81e7e270d75ffb9a6bb95b56857ca
				 keytype ed25519
				 keyid 8650aed05799a74f5febc9070c5d3e58d62797662d48062614b1ce0a643ee368
				 keyid_hash_algorithms [u'sha256', u'sha512']
	-------->[demo/__init__.py]
			>>Action Perfomed:  Calling rt.import_ed25519_privatekey_from_file

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Checking format for
				/home/joan/Escriptori/TFM/TFM/demo/keys/mainrole1
				Password? pw

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Checking password: 'pw' have the correct format

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Store the encrypted contents of '/home/joan/Escriptori/TFM/TFM/demo/keys/mainrole1' prior to calling the decryption routine

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Encrypted content of: '/home/joan/Escriptori/TFM/TFM/demo/keys/mainrole1': 
				49126c753cf606c8733008375f880d16@@@@100000@@@@78120f8a5e3b9c52a6e533c783fca1e1e750f2824ed48683800a846b10c70a71@@@@e5a92d0e0a9a768372c196d56bba467a@@@@8c476dd93e1af508f6a0450bc00e5fcbefe9a6c833b68447c4826920a0381dd3d4539c0719832e007c48594487c09c03095983366974e18bf61f4bef9846e704c5a7b375f4edfb203f5206a644cf2239cced013b9bbed13f1d4057e705b4bab4a316298eba312f985dd48d775ca2ac2eed55c9740ac903b06bafd51f773680d14b485f5c5d08d03f7656e1ef33990a40370158b55199a08a81c25522c6826472d2b5231e7244a76f921275a47a41d24831e3a916c835fbb69d5b475bbf2d4fd2283131a6a89ec3c3704025c3da3a82fcb088fc5654a4f9e3744c163ed8aa289882fa11f75fa6e991a667b381179794698aafb0e0e5b4e9ad571143ec82f560885ce4d13f9688be23df48648b

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   Decrypted content of: ' /home/joan/Escriptori/TFM/TFM/demo/keys/mainrole1 ':  {u'keytype': u'ed25519', u'keyid': u'8650aed05799a74f5febc9070c5d3e58d62797662d48062614b1ce0a643ee368', u'keyval': {u'public': u'c5a78db3f3ba96462525664e502f2e7893b81e7e270d75ffb9a6bb95b56857ca', u'private': u'134dc07435cd0d5a371d51ee938899c594c578dd0a3ab048aa70de5dd71f99f2'}} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   Checking that 'keytype' equals to 'ed25519' 

	[demo/demo_image_repo.py]	>>Function:  [clean_slate()]: [key_role1_pri]
				 keytype ed25519
				 keyid 8650aed05799a74f5febc9070c5d3e58d62797662d48062614b1ce0a643ee368
				 keyval
					 public c5a78db3f3ba96462525664e502f2e7893b81e7e270d75ffb9a6bb95b56857ca
					 private 134dc07435cd0d5a371d51ee938899c594c578dd0a3ab048aa70de5dd71f99f2
	[demo/demo_image_repo.py]	>>Function:  [clean_slate()]: Adding top level keys to the main repository
	[demo/demo_image_repo.py]	>>Function:  [clean_slate()]: key_root_pub
				 keyval
					 public f4ac8d95cfdf65a4ccaee072ba5a48e8ad6a0c30be6ffd525aec6bc078211033
				 keytype ed25519
				 keyid 94c836f0c45168f0a437eef0e487b910f58db4d462ae457b5730a4487130f290
				 keyid_hash_algorithms [u'sha256', u'sha512']
				 expires 2021-01-30T22:59:33Z
	[demo/demo_image_repo.py]	>>Function:  [clean_slate()]: [key_timestamp_pub]
				 keyval
					 public 97c1112bbd9047b1fdb50dd638bfed6d0639e0dff2c1443f5593fea40e30f654
				 keytype ed25519
				 keyid 6fcd9a928358ad8ca7e946325f57ec71d50cb5977a8d02c5ab0de6765fef040a
				 keyid_hash_algorithms [u'sha256', u'sha512']
				 expires 2020-02-01T17:11:13Z
	[demo/demo_image_repo.py]	>>Function:  [clean_slate()]: [key_snapshot_pub]
				 keyval
					 public 497f62d80e5b892718da8788bb549bcf8369a1460ec23d6d67d0ca099a8e8f83
				 keytype ed25519
				 keyid aaf05f8d054f8068bf6cb46beed7c824e2560802df462fc8681677586582ca99
				 keyid_hash_algorithms [u'sha256', u'sha512']
				 expires 2020-02-01T17:11:13Z
	[demo/demo_image_repo.py]	>>Function:  [clean_slate()]: [key_targets_pub]
				 keyval
					 public 729d9cb5f74688ef8e9a22fae1516f33ff98c7910b64bf3b66e6cfc51559840e
				 keytype ed25519
				 keyid c24b457b2ca4b3c2f415efdbbebb914a0d05c5345b9889bda044362589d6f596
				 keyid_hash_algorithms [u'sha256', u'sha512']
				 expires 2020-02-01T17:11:13Z
	[demo/demo_image_repo.py]	>>Function:  [clean_slate()]: [key_root_pri]
				 keytype ed25519
				 keyid 94c836f0c45168f0a437eef0e487b910f58db4d462ae457b5730a4487130f290
				 keyval
					 public f4ac8d95cfdf65a4ccaee072ba5a48e8ad6a0c30be6ffd525aec6bc078211033
					 private 879d244c6720361cf1f038a84082b08ac9cd586c32c1c9c6153f6db61b474957
	[demo/demo_image_repo.py]	>>Function:  [clean_slate()]: [key_timestamp_pri]
				 keytype ed25519
				 keyid 6fcd9a928358ad8ca7e946325f57ec71d50cb5977a8d02c5ab0de6765fef040a
				 keyval
					 public 97c1112bbd9047b1fdb50dd638bfed6d0639e0dff2c1443f5593fea40e30f654
					 private ef373ea36a633a0044bbca19a298a4100e7f353461d7fe546e0ec299ac1b659e
	[demo/demo_image_repo.py]	>>Function:  [clean_slate()]: [key_snapshot_pri]
				 keytype ed25519
				 keyid aaf05f8d054f8068bf6cb46beed7c824e2560802df462fc8681677586582ca99
				 keyval
					 public 497f62d80e5b892718da8788bb549bcf8369a1460ec23d6d67d0ca099a8e8f83
					 private f559b6e50414c6e42f4474675deb2ed0a43f1028354ef4541f4f3af15e4ebe09
	[demo/demo_image_repo.py]	>>Function:  [clean_slate()]: [key_targets_pri]
				 keytype ed25519
				 keyid c24b457b2ca4b3c2f415efdbbebb914a0d05c5345b9889bda044362589d6f596
				 keyval
					 public 729d9cb5f74688ef8e9a22fae1516f33ff98c7910b64bf3b66e6cfc51559840e
					 private 1c7b6e113c64bdd3e5123f6bbd8572c3ea23e8d5dffa9868cf380958f3aa642f
	[demo/demo_image_repo.py]	>>Function:  [clean_slate()]: Adding some already created targets to imagerepo
	[demo/demo_image_repo.py]	>>Function:  [write_to_live()]: Checking format of: demo/images/INFO1.0.txt
ImageRepo: Copying target file into place.
	[demo/demo_image_repo.py]	>>Function:  [write_to_live()]: Copying: demo/images/INFO1.0.txt to: /home/joan/Escriptori/TFM/TFM/imagerepo/targets/INFO1.0.txt
	[demo/demo_image_repo.py]	>>Function:  [write_to_live()]: Checking format of: demo/images/TCU1.0.txt
ImageRepo: Copying target file into place.
	[demo/demo_image_repo.py]	>>Function:  [write_to_live()]: Copying: demo/images/TCU1.0.txt to: /home/joan/Escriptori/TFM/TFM/imagerepo/targets/TCU1.0.txt
	[demo/demo_image_repo.py]	>>Function:  [write_to_live()]: Checking format of: demo/images/TCU1.1.txt
ImageRepo: Copying target file into place.
	[demo/demo_image_repo.py]	>>Function:  [write_to_live()]: Copying: demo/images/TCU1.1.txt to: /home/joan/Escriptori/TFM/TFM/imagerepo/targets/TCU1.1.txt
	[demo/demo_image_repo.py]	>>Function:  [write_to_live()]: Checking format of: demo/images/TCU1.2.txt
ImageRepo: Copying target file into place.
	[demo/demo_image_repo.py]	>>Function:  [write_to_live()]: Copying: demo/images/TCU1.2.txt to: /home/joan/Escriptori/TFM/TFM/imagerepo/targets/TCU1.2.txt
	[demo/demo_image_repo.py]	>>Function:  [write_to_live()]: Checking format of: demo/images/BCU1.0.txt
ImageRepo: Copying target file into place.
	[demo/demo_image_repo.py]	>>Function:  [write_to_live()]: Copying: demo/images/BCU1.0.txt to: /home/joan/Escriptori/TFM/TFM/imagerepo/targets/BCU1.0.txt
	[demo/demo_image_repo.py]	>>Function:  [write_to_live()]: Checking format of: demo/images/BCU1.1.txt
ImageRepo: Copying target file into place.
	[demo/demo_image_repo.py]	>>Function:  [write_to_live()]: Copying: demo/images/BCU1.1.txt to: /home/joan/Escriptori/TFM/TFM/imagerepo/targets/BCU1.1.txt
	[demo/demo_image_repo.py]	>>Function:  [write_to_live()]: Checking format of: demo/images/BCU1.2.txt
ImageRepo: Copying target file into place.
	[demo/demo_image_repo.py]	>>Function:  [write_to_live()]: Copying: demo/images/BCU1.2.txt to: /home/joan/Escriptori/TFM/TFM/imagerepo/targets/BCU1.2.txt
ImageRepo: Signing and hosting initial repository metadata
	[demo/demo_image_repo.py]	>>Function:  [write_to_live()]: timestamp and snapshot marked as dirty
	[demo/demo_image_repo.py]	>>Function:  [write_to_live()]: Writting in repo instance...
u'timestamp.der' expires Sat Feb  1 17:11:05 2020 (UTC).
0.9999074074074074 day(s) until it expires.
	[demo/demo_image_repo.py]	>>Function:  [write_to_live()]: Moving staged metadata to live metadata directory in: 				/home/joan/Escriptori/TFM/TFM/imagerepo
	[demo/demo_image_repo.py]	>>Function:  [host()]: Attempting to start server process...
	[demo/demo_image_repo.py]	>>Function:  [host()]: Preparing to host the main repo contents
	[demo/demo_image_repo.py]	>>Function:  [host()]:  Beginning hosting the server process 				 <subprocess.Popen object at 0x7f27de8eed50>
ImageRepo: Main Repo server process started, with pid 4087; Main Repo serving on port: 30301; Main repo URL is 0.0.0.0:30301/
ImageRepo: Starting Image Repo Services Thread: will now listen on port 30309
	[demo/demo_director.py]	>>Function:  [clean_slate()]: Adding: /home/joan/Escriptori/TFM/TFM/directorto os.path
Director: Loading all keys
	[demo/demo_director.py]	>>Function:  [clean_slate()]: Create keys and/or load keys into memory.
		[use_new_keys] = False
	-------->[demo/__init__.py]
			>>Action Perfomed:  Calling rt.import_ed25519_publickey_from_file

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Checking format for
				/home/joan/Escriptori/TFM/TFM/demo/keys/directorroot.pub

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  ED25519 key objects are saved in .json and metadata format.
				Return the loaded key object in tuf.formats.ED25519KEY_SCHEMA format that also includes the keyid

	-------- --------> [tuf/util.py]
			>>Action Perfomed:  Checking format of: /home/joan/Escriptori/TFM/TFM/demo/keys/directorroot.pub

	-------- --------> [tuf/util.py]
			>>Action Perfomed:   Checking whether the file is mostly likely gzipped: False 

	-------- --------> [tuf/util.py]
			>>Action Perfomed:   Loading: <open file u'/home/joan/Escriptori/TFM/TFM/demo/keys/directorroot.pub', mode 'r' at 0x7f27ded7f4b0> 

	-------- --------> [tuf/util.py]
			>>Action Perfomed:   Loading json: {u'keytype': u'ed25519', u'keyid_hash_algorithms': [u'sha256', u'sha512'], u'keyval': {u'public': u'f3b4c231520580eca92e17ae1581a708f606f72d43cc200af493afeec22a5e79'}} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   ed25519_key_metadata:  
				 {u'keytype': u'ed25519', u'keyid_hash_algorithms': [u'sha256', u'sha512'], u'keyval': {u'public': u'f3b4c231520580eca92e17ae1581a708f606f72d43cc200af493afeec22a5e79'}} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   ed25519_key:  
				 {u'keyval': {u'public': u'f3b4c231520580eca92e17ae1581a708f606f72d43cc200af493afeec22a5e79'}, u'keytype': u'ed25519', u'keyid': 'fdba7eaa358fa5a8113a789f60c4a6ce29c4478d8d8eff3e27d1d77416696ab2', u'keyid_hash_algorithms': [u'sha256', u'sha512']} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   junk:  
				 set(['833224784cbc56f947436c990c127770bd7fddeb8346bade602320542dc260cb059102ad210dba36a2fa5baacd81c89198a0f41db04c961512ce8be78c5251e2', 'fdba7eaa358fa5a8113a789f60c4a6ce29c4478d8d8eff3e27d1d77416696ab2']) 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Returning the key: {u'keyval': {u'public': u'f3b4c231520580eca92e17ae1581a708f606f72d43cc200af493afeec22a5e79'}, u'keytype': u'ed25519', u'keyid': 'fdba7eaa358fa5a8113a789f60c4a6ce29c4478d8d8eff3e27d1d77416696ab2', u'keyid_hash_algorithms': [u'sha256', u'sha512']}
	[demo/demo_director.py]	>>Function:  [clean_slate()]: [key_dirroot_pub]
				 keyval
					 public f3b4c231520580eca92e17ae1581a708f606f72d43cc200af493afeec22a5e79
				 keytype ed25519
				 keyid fdba7eaa358fa5a8113a789f60c4a6ce29c4478d8d8eff3e27d1d77416696ab2
				 keyid_hash_algorithms [u'sha256', u'sha512']
	-------->[demo/__init__.py]
			>>Action Perfomed:  Calling rt.import_ed25519_privatekey_from_file

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Checking format for
				/home/joan/Escriptori/TFM/TFM/demo/keys/directorroot
				Password? pw

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Checking password: 'pw' have the correct format

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Store the encrypted contents of '/home/joan/Escriptori/TFM/TFM/demo/keys/directorroot' prior to calling the decryption routine

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Encrypted content of: '/home/joan/Escriptori/TFM/TFM/demo/keys/directorroot': 
				faa431f56ab70096016384d60e789ae6@@@@100000@@@@6b6dbf7be483b860309e617516d6b591651720f3ac95bf2ababb0792825876a0@@@@b6aaab78776ae1f55a3771e814ff50ce@@@@5106a3c58d9749aba7c9ef92514809fb92d139e3b5b6b9109354e7c72c15690e267dc7c0b09ee05ecd78750bec1050e290da42a6da516b0fa26bd01bd5f5d5cda5f2534b64e52af4ccff5f164a0cd98532873622fb603549cabaefc76008bdfd72e3886dd11e9ed3f212e82ca86b08901228b01495911d0a3969260e1eec7c5a3e0777190207ce58658e731960c341e98d5bc0cc0de1e7629afb8a7053e729ff7496c561b72e5be3be4183c146ea6a80287730ea7981c2d332082b10eb9ee555c3f39bd482049e64da59d0cf872ac204dfc080192a3cb645ce0d71fb82a70523681744ddba4b9e02dbd1951ab57e1b5c272271c7a28d67a1d0558813996d4de8829309beb00c1b2eec251c21

Serving HTTP on 0.0.0.0 port 30301 ...
	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   Decrypted content of: ' /home/joan/Escriptori/TFM/TFM/demo/keys/directorroot ':  {u'keytype': u'ed25519', u'keyid': u'fdba7eaa358fa5a8113a789f60c4a6ce29c4478d8d8eff3e27d1d77416696ab2', u'keyval': {u'public': u'f3b4c231520580eca92e17ae1581a708f606f72d43cc200af493afeec22a5e79', u'private': u'0a28c759f75d527d73dc4d0ac108d0a75cd45de089ed639d81cf33754d866a68'}} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   Checking that 'keytype' equals to 'ed25519' 

	[demo/demo_director.py]	>>Function:  [clean_slate()]: [key_dirroot_pri]
				 keytype ed25519
				 keyid fdba7eaa358fa5a8113a789f60c4a6ce29c4478d8d8eff3e27d1d77416696ab2
				 keyval
					 public f3b4c231520580eca92e17ae1581a708f606f72d43cc200af493afeec22a5e79
					 private 0a28c759f75d527d73dc4d0ac108d0a75cd45de089ed639d81cf33754d866a68
	-------->[demo/__init__.py]
			>>Action Perfomed:  Calling rt.import_ed25519_publickey_from_file

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Checking format for
				/home/joan/Escriptori/TFM/TFM/demo/keys/directortimestamp.pub

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  ED25519 key objects are saved in .json and metadata format.
				Return the loaded key object in tuf.formats.ED25519KEY_SCHEMA format that also includes the keyid

	-------- --------> [tuf/util.py]
			>>Action Perfomed:  Checking format of: /home/joan/Escriptori/TFM/TFM/demo/keys/directortimestamp.pub

	-------- --------> [tuf/util.py]
			>>Action Perfomed:   Checking whether the file is mostly likely gzipped: False 

	-------- --------> [tuf/util.py]
			>>Action Perfomed:   Loading: <open file u'/home/joan/Escriptori/TFM/TFM/demo/keys/directortimestamp.pub', mode 'r' at 0x7f27ded7f4b0> 

	-------- --------> [tuf/util.py]
			>>Action Perfomed:   Loading json: {u'keytype': u'ed25519', u'keyid_hash_algorithms': [u'sha256', u'sha512'], u'keyval': {u'public': u'd1ab5126fd6f0e30944910e81c0448044dfe9d5a39f478212b2afa913bb7ca7c'}} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   ed25519_key_metadata:  
				 {u'keytype': u'ed25519', u'keyid_hash_algorithms': [u'sha256', u'sha512'], u'keyval': {u'public': u'd1ab5126fd6f0e30944910e81c0448044dfe9d5a39f478212b2afa913bb7ca7c'}} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   ed25519_key:  
				 {u'keyval': {u'public': u'd1ab5126fd6f0e30944910e81c0448044dfe9d5a39f478212b2afa913bb7ca7c'}, u'keytype': u'ed25519', u'keyid': 'da9c65c96c5c4072f6984f7aa81216d776aca6664d49cb4dfafbc7119320d9cc', u'keyid_hash_algorithms': [u'sha256', u'sha512']} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   junk:  
				 set(['422aee4485e7f3357a04516cff9b61192da81547e4d43998a31a7b77f0ef20b5e41f47a3cdc6259b849d8ba6d89001f4dfddfc7605fd51b2309369bc14bafafe', 'da9c65c96c5c4072f6984f7aa81216d776aca6664d49cb4dfafbc7119320d9cc']) 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Returning the key: {u'keyval': {u'public': u'd1ab5126fd6f0e30944910e81c0448044dfe9d5a39f478212b2afa913bb7ca7c'}, u'keytype': u'ed25519', u'keyid': 'da9c65c96c5c4072f6984f7aa81216d776aca6664d49cb4dfafbc7119320d9cc', u'keyid_hash_algorithms': [u'sha256', u'sha512']}
	[demo/demo_director.py]	>>Function:  [clean_slate()]: [key_dirtime_pub]
				 keyval
					 public d1ab5126fd6f0e30944910e81c0448044dfe9d5a39f478212b2afa913bb7ca7c
				 keytype ed25519
				 keyid da9c65c96c5c4072f6984f7aa81216d776aca6664d49cb4dfafbc7119320d9cc
				 keyid_hash_algorithms [u'sha256', u'sha512']
	-------->[demo/__init__.py]
			>>Action Perfomed:  Calling rt.import_ed25519_privatekey_from_file

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Checking format for
				/home/joan/Escriptori/TFM/TFM/demo/keys/directortimestamp
				Password? pw

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Checking password: 'pw' have the correct format

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Store the encrypted contents of '/home/joan/Escriptori/TFM/TFM/demo/keys/directortimestamp' prior to calling the decryption routine

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Encrypted content of: '/home/joan/Escriptori/TFM/TFM/demo/keys/directortimestamp': 
				272213a00b4405fdc107f2c4f90d5fd3@@@@100000@@@@ffcd4d9098d1629d96aad954aee7f1055e9370e0b3ae64bd8d54ef88cb8026d4@@@@ec6298e00176355ba70c625f30f2a753@@@@6a714d2be433f702206023ef2ad98d20001b668f2d1161f9ed1b126919b3e31b7b43214a4722ae3930a0eb81d85bef9265cf94373686213dcae252e8061676564af3b0974014d14da1e6ee08fe28ab5080ac06a224d1d6469f06108b1aaaf280a3b29266c9c465d75e8b5be5a60c7e5a1db4730d05d9a05786aa98b98a22ff564a7aba7d7142d3507a14c83d7bedcd033bc7ac230102fdb3be4c48e0b628270fd6cce6c8f27bc69b5992c5f30f80253f19011c0450b4ab0414ef1493accaf277bf6774bae044fe7f037f8144e49bf20f3c70b059ffff6925eb3bd229d6f44bc97d312bb0864f5f82b97ada317470c058da288f105126ec5b4174c198d625545a124382c34b23b47fdff49bbb

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   Decrypted content of: ' /home/joan/Escriptori/TFM/TFM/demo/keys/directortimestamp ':  {u'keytype': u'ed25519', u'keyid': u'da9c65c96c5c4072f6984f7aa81216d776aca6664d49cb4dfafbc7119320d9cc', u'keyval': {u'public': u'd1ab5126fd6f0e30944910e81c0448044dfe9d5a39f478212b2afa913bb7ca7c', u'private': u'eedf737cc9867799e1f97245dfd1e1ed038e10e05466bedf020c553c596e3dce'}} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   Checking that 'keytype' equals to 'ed25519' 

	[demo/demo_director.py]	>>Function:  [clean_slate()]: [key_dirtime_pri]
				 keytype ed25519
				 keyid da9c65c96c5c4072f6984f7aa81216d776aca6664d49cb4dfafbc7119320d9cc
				 keyval
					 public d1ab5126fd6f0e30944910e81c0448044dfe9d5a39f478212b2afa913bb7ca7c
					 private eedf737cc9867799e1f97245dfd1e1ed038e10e05466bedf020c553c596e3dce
	-------->[demo/__init__.py]
			>>Action Perfomed:  Calling rt.import_ed25519_publickey_from_file

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Checking format for
				/home/joan/Escriptori/TFM/TFM/demo/keys/directorsnapshot.pub

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  ED25519 key objects are saved in .json and metadata format.
				Return the loaded key object in tuf.formats.ED25519KEY_SCHEMA format that also includes the keyid

	-------- --------> [tuf/util.py]
			>>Action Perfomed:  Checking format of: /home/joan/Escriptori/TFM/TFM/demo/keys/directorsnapshot.pub

	-------- --------> [tuf/util.py]
			>>Action Perfomed:   Checking whether the file is mostly likely gzipped: False 

	-------- --------> [tuf/util.py]
			>>Action Perfomed:   Loading: <open file u'/home/joan/Escriptori/TFM/TFM/demo/keys/directorsnapshot.pub', mode 'r' at 0x7f27ded7f4b0> 

	-------- --------> [tuf/util.py]
			>>Action Perfomed:   Loading json: {u'keytype': u'ed25519', u'keyid_hash_algorithms': [u'sha256', u'sha512'], u'keyval': {u'public': u'228342cc8b78a65b8840ef5691a693d8c368e053a7e8e8f85faf7c83eff1e1d2'}} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   ed25519_key_metadata:  
				 {u'keytype': u'ed25519', u'keyid_hash_algorithms': [u'sha256', u'sha512'], u'keyval': {u'public': u'228342cc8b78a65b8840ef5691a693d8c368e053a7e8e8f85faf7c83eff1e1d2'}} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   ed25519_key:  
				 {u'keyval': {u'public': u'228342cc8b78a65b8840ef5691a693d8c368e053a7e8e8f85faf7c83eff1e1d2'}, u'keytype': u'ed25519', u'keyid': 'f93cfcf33d335ff43654ec6047e0a18dd5595ee3de53136b94c9c756788a0f97', u'keyid_hash_algorithms': [u'sha256', u'sha512']} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   junk:  
				 set(['f93cfcf33d335ff43654ec6047e0a18dd5595ee3de53136b94c9c756788a0f97', 'fb89d7b68f2baee108b95cfe4f13fb87237012ee787a4d18b1a24550f8969ca8034289fe2ffd22d7fcb2a51f537568e5437b25d2c4c41dca6b05499f02c622f4']) 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Returning the key: {u'keyval': {u'public': u'228342cc8b78a65b8840ef5691a693d8c368e053a7e8e8f85faf7c83eff1e1d2'}, u'keytype': u'ed25519', u'keyid': 'f93cfcf33d335ff43654ec6047e0a18dd5595ee3de53136b94c9c756788a0f97', u'keyid_hash_algorithms': [u'sha256', u'sha512']}
	[demo/demo_director.py]	>>Function:  [clean_slate()]: [key_dirsnap_pub]
				 keyval
					 public 228342cc8b78a65b8840ef5691a693d8c368e053a7e8e8f85faf7c83eff1e1d2
				 keytype ed25519
				 keyid f93cfcf33d335ff43654ec6047e0a18dd5595ee3de53136b94c9c756788a0f97
				 keyid_hash_algorithms [u'sha256', u'sha512']
	-------->[demo/__init__.py]
			>>Action Perfomed:  Calling rt.import_ed25519_privatekey_from_file

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Checking format for
				/home/joan/Escriptori/TFM/TFM/demo/keys/directorsnapshot
				Password? pw

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Checking password: 'pw' have the correct format

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Store the encrypted contents of '/home/joan/Escriptori/TFM/TFM/demo/keys/directorsnapshot' prior to calling the decryption routine

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Encrypted content of: '/home/joan/Escriptori/TFM/TFM/demo/keys/directorsnapshot': 
				42293bb65c6be5de125828dbdffadf87@@@@100000@@@@ed7f9920c8e8ffb47cc5e5b2869d627fd080294964c16daf9c6c380b56a703ed@@@@dad720e7355909dbd9be853ef797f04b@@@@084030ca8c7812911ef64b11fcf748630e66ff8e02cf361f8b9f34d9b1a5056e8f3ce712a1434cadbae84ee8ada0ed3638181cc8e4f139d3b5caa3708a1a25acfb37a31eb709ca1ef40592de524efcbb11db37b9d57283126c769c0f776f16e4d8ed79e9c0e95bc688993dc697ac2c4ff7e029d579c41909414e0c95a54aba466e6781c67ef672eebcc669faa807c832999b4f9e26f133d76e97701020279127abc3032c707b13ff418f28be403fddd158577017052ed50a62fa417519e61d17e783e18886b74b74dd2b9aae9571fa9b7bd55de3aeb13479672f663a9447cc09b386f911cf3f91ab5c49af132f0c99170e6ce4b91671f98061fd5b05e8fca4ecacc0a48bcd09a376eef3a018

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   Decrypted content of: ' /home/joan/Escriptori/TFM/TFM/demo/keys/directorsnapshot ':  {u'keytype': u'ed25519', u'keyid': u'f93cfcf33d335ff43654ec6047e0a18dd5595ee3de53136b94c9c756788a0f97', u'keyval': {u'public': u'228342cc8b78a65b8840ef5691a693d8c368e053a7e8e8f85faf7c83eff1e1d2', u'private': u'452249a89783145c16ca878eb76d22ec898f42c83e12b665d1677b057209d4c1'}} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   Checking that 'keytype' equals to 'ed25519' 

	[demo/demo_director.py]	>>Function:  [clean_slate()]: [key_dirsnap_pri]
				 keytype ed25519
				 keyid f93cfcf33d335ff43654ec6047e0a18dd5595ee3de53136b94c9c756788a0f97
				 keyval
					 public 228342cc8b78a65b8840ef5691a693d8c368e053a7e8e8f85faf7c83eff1e1d2
					 private 452249a89783145c16ca878eb76d22ec898f42c83e12b665d1677b057209d4c1
	-------->[demo/__init__.py]
			>>Action Perfomed:  Calling rt.import_ed25519_publickey_from_file

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Checking format for
				/home/joan/Escriptori/TFM/TFM/demo/keys/director.pub

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  ED25519 key objects are saved in .json and metadata format.
				Return the loaded key object in tuf.formats.ED25519KEY_SCHEMA format that also includes the keyid

	-------- --------> [tuf/util.py]
			>>Action Perfomed:  Checking format of: /home/joan/Escriptori/TFM/TFM/demo/keys/director.pub

	-------- --------> [tuf/util.py]
			>>Action Perfomed:   Checking whether the file is mostly likely gzipped: False 

	-------- --------> [tuf/util.py]
			>>Action Perfomed:   Loading: <open file u'/home/joan/Escriptori/TFM/TFM/demo/keys/director.pub', mode 'r' at 0x7f27ded7f4b0> 

	-------- --------> [tuf/util.py]
			>>Action Perfomed:   Loading json: {u'keytype': u'ed25519', u'keyid_hash_algorithms': [u'sha256', u'sha512'], u'keyval': {u'public': u'99ef8790687ca252c4677a80a34e401efb7e17ccdf9b0fcb5f1bc3260c432cb9'}} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   ed25519_key_metadata:  
				 {u'keytype': u'ed25519', u'keyid_hash_algorithms': [u'sha256', u'sha512'], u'keyval': {u'public': u'99ef8790687ca252c4677a80a34e401efb7e17ccdf9b0fcb5f1bc3260c432cb9'}} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   ed25519_key:  
				 {u'keyval': {u'public': u'99ef8790687ca252c4677a80a34e401efb7e17ccdf9b0fcb5f1bc3260c432cb9'}, u'keytype': u'ed25519', u'keyid': '630cf584f392430b2119a4395e39624e86f5e5c5374507a789be5cf35bf090d6', u'keyid_hash_algorithms': [u'sha256', u'sha512']} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   junk:  
				 set(['630cf584f392430b2119a4395e39624e86f5e5c5374507a789be5cf35bf090d6', '333d003373875f2e32c1ebc85c69e3b5a5281ab4da222486a095afdb7ed1be0b528948609b59172c68f6a4f707c1ce7a893d13a2243925a28923d315a5f33386']) 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Returning the key: {u'keyval': {u'public': u'99ef8790687ca252c4677a80a34e401efb7e17ccdf9b0fcb5f1bc3260c432cb9'}, u'keytype': u'ed25519', u'keyid': '630cf584f392430b2119a4395e39624e86f5e5c5374507a789be5cf35bf090d6', u'keyid_hash_algorithms': [u'sha256', u'sha512']}
	[demo/demo_director.py]	>>Function:  [clean_slate()]: [key_dirtarg_pub]
				 keyval
					 public 99ef8790687ca252c4677a80a34e401efb7e17ccdf9b0fcb5f1bc3260c432cb9
				 keytype ed25519
				 keyid 630cf584f392430b2119a4395e39624e86f5e5c5374507a789be5cf35bf090d6
				 keyid_hash_algorithms [u'sha256', u'sha512']
	-------->[demo/__init__.py]
			>>Action Perfomed:  Calling rt.import_ed25519_privatekey_from_file

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Checking format for
				/home/joan/Escriptori/TFM/TFM/demo/keys/director
				Password? pw

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Checking password: 'pw' have the correct format

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Store the encrypted contents of '/home/joan/Escriptori/TFM/TFM/demo/keys/director' prior to calling the decryption routine

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Encrypted content of: '/home/joan/Escriptori/TFM/TFM/demo/keys/director': 
				7f8fcae94b95a04baa1f07aa374937f9@@@@100000@@@@48d5bd2502df5d921e714f0782f42e1df1ae08ffb4d0dbf5df1923557096b005@@@@a724429acda285bfb3e7f2b4db0b0928@@@@f6056beade9cd29b105c8f82186b24f5e9257a11420ddf2e4056a6ce7907ffb334dc130c6f12268f0229a5b34364d6375cd398de2b3aea93f6fd55355a725b8352caea89a625bf020e7a2a165aec5f95794f73265779056f9e3a227469cf89f484ff4067e4fa50241492810c89a5a9e83945af92a41a37096068f7fd01976ec209c3156bfc9308c5e95a1381859bff06a62df2ad2aabb9f417e2588941b9239d6a6d130572de94813cfd089eefbe73fe59e297f047dac67e8dfa437360bbc7ec953a507ca69fc48a21dadb6124643f6bf3e813d603a5609391cf5c1b5b30321a3024f3a8f97f325e96be102d0dceba28bf1f5a4c7614c0e0ffd2b6819758e0d02ad1df6adb16e23282dc502a

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   Decrypted content of: ' /home/joan/Escriptori/TFM/TFM/demo/keys/director ':  {u'keytype': u'ed25519', u'keyid': u'630cf584f392430b2119a4395e39624e86f5e5c5374507a789be5cf35bf090d6', u'keyval': {u'public': u'99ef8790687ca252c4677a80a34e401efb7e17ccdf9b0fcb5f1bc3260c432cb9', u'private': u'db68f9c0831e405a8168f9225c51d645f4f58aabe729ed0297aac650df132c2a'}} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   Checking that 'keytype' equals to 'ed25519' 

	[demo/demo_director.py]	>>Function:  [clean_slate()]: [key_dirtarg_pri]
				 keytype ed25519
				 keyid 630cf584f392430b2119a4395e39624e86f5e5c5374507a789be5cf35bf090d6
				 keyval
					 public 99ef8790687ca252c4677a80a34e401efb7e17ccdf9b0fcb5f1bc3260c432cb9
					 private db68f9c0831e405a8168f9225c51d645f4f58aabe729ed0297aac650df132c2a
Director: Initializing vehicle repositories
	[demo/demo_director.py]	>>Function:  [clean_slate()]: Creating demo Director instance
		[uptane/services/director.py]	>>Function:  [__init__]:  Value for director_repos_dir:  /home/joan/Escriptori/TFM/TFM/director
		[uptane/services/director.py]	>>Function:  [__init__]:  Value for key_root_pri:  {u'keytype': u'ed25519', u'keyid': u'fdba7eaa358fa5a8113a789f60c4a6ce29c4478d8d8eff3e27d1d77416696ab2', u'keyval': {u'public': u'f3b4c231520580eca92e17ae1581a708f606f72d43cc200af493afeec22a5e79', u'private': u'0a28c759f75d527d73dc4d0ac108d0a75cd45de089ed639d81cf33754d866a68'}}
		[uptane/services/director.py]	>>Function:  [__init__]:  Value for key_root_pub:  {u'keyval': {u'public': u'f3b4c231520580eca92e17ae1581a708f606f72d43cc200af493afeec22a5e79'}, u'keytype': u'ed25519', u'keyid': 'fdba7eaa358fa5a8113a789f60c4a6ce29c4478d8d8eff3e27d1d77416696ab2', u'keyid_hash_algorithms': [u'sha256', u'sha512']}
		[uptane/services/director.py]	>>Function:  [__init__]:  Value for key_timestamp_pri:  {u'keytype': u'ed25519', u'keyid': u'da9c65c96c5c4072f6984f7aa81216d776aca6664d49cb4dfafbc7119320d9cc', u'keyval': {u'public': u'd1ab5126fd6f0e30944910e81c0448044dfe9d5a39f478212b2afa913bb7ca7c', u'private': u'eedf737cc9867799e1f97245dfd1e1ed038e10e05466bedf020c553c596e3dce'}}
		[uptane/services/director.py]	>>Function:  [__init__]:  Value for key_timestamp_pub:  {u'keyval': {u'public': u'd1ab5126fd6f0e30944910e81c0448044dfe9d5a39f478212b2afa913bb7ca7c'}, u'keytype': u'ed25519', u'keyid': 'da9c65c96c5c4072f6984f7aa81216d776aca6664d49cb4dfafbc7119320d9cc', u'keyid_hash_algorithms': [u'sha256', u'sha512']}
		[uptane/services/director.py]	>>Function:  [__init__]:  Value for key_snapshot_pri:  {u'keytype': u'ed25519', u'keyid': u'f93cfcf33d335ff43654ec6047e0a18dd5595ee3de53136b94c9c756788a0f97', u'keyval': {u'public': u'228342cc8b78a65b8840ef5691a693d8c368e053a7e8e8f85faf7c83eff1e1d2', u'private': u'452249a89783145c16ca878eb76d22ec898f42c83e12b665d1677b057209d4c1'}}
		[uptane/services/director.py]	>>Function:  [__init__]:  Value for key_snapshot_pub:  {u'keyval': {u'public': u'228342cc8b78a65b8840ef5691a693d8c368e053a7e8e8f85faf7c83eff1e1d2'}, u'keytype': u'ed25519', u'keyid': 'f93cfcf33d335ff43654ec6047e0a18dd5595ee3de53136b94c9c756788a0f97', u'keyid_hash_algorithms': [u'sha256', u'sha512']}
		[uptane/services/director.py]	>>Function:  [__init__]:  Value for key_targets_pri:  {u'keytype': u'ed25519', u'keyid': u'630cf584f392430b2119a4395e39624e86f5e5c5374507a789be5cf35bf090d6', u'keyval': {u'public': u'99ef8790687ca252c4677a80a34e401efb7e17ccdf9b0fcb5f1bc3260c432cb9', u'private': u'db68f9c0831e405a8168f9225c51d645f4f58aabe729ed0297aac650df132c2a'}}
		[uptane/services/director.py]	>>Function:  [__init__]:  Value for key_targets_pub:  {u'keyval': {u'public': u'99ef8790687ca252c4677a80a34e401efb7e17ccdf9b0fcb5f1bc3260c432cb9'}, u'keytype': u'ed25519', u'keyid': '630cf584f392430b2119a4395e39624e86f5e5c5374507a789be5cf35bf090d6', u'keyid_hash_algorithms': [u'sha256', u'sha512']}
		[uptane/services/director.py]	>>Function:  [__init__]: Checking format of: /home/joan/Escriptori/TFM/TFM/director
	[demo/demo_director.py]	>>Function:  [clean_slate()]: Adding new vehicle to director instance with vin: 111
	--------> [tuf/repository_tool.py]
			>>Function:  Checking format for: 111

	--------> [tuf/repository_tool.py]
			>>Function:  Setting the repository, metadata (as None) and targets direcotires (as None) for: 111

	--------> [tuf/repository_tool.py]
			>>Function:  Creating repository: /home/joan/Escriptori/TFM/TFM/director/111

Creating u'/home/joan/Escriptori/TFM/TFM/director/111'
	--------> [tuf/repository_tool.py]
			>>Function:  Setting the metadata and targets directories: 
				metadata:metadata.staged
				targets:targets

	--------> [tuf/repository_tool.py]
			>>Function:  Creating the metadata directory that will hold all of the metadata files, such as 'root.json' at:
				/home/joan/Escriptori/TFM/TFM/director/111/metadata.staged

Creating u'/home/joan/Escriptori/TFM/TFM/director/111/metadata.staged'
	--------> [tuf/repository_tool.py]
			>>Function:  Creating the targets directory that will hold all of the targets files at:
				/home/joan/Escriptori/TFM/TFM/director/111/targets

Creating u'/home/joan/Escriptori/TFM/TFM/director/111/targets'
	--------> [tuf/repository_tool.py]
			>>Function:  Create the bare bones repository object, where only top-level roles have been set and contain default values (e.g., Root roles has a threshold of 1, expires 1 year into the future, etc...)

	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for repository_directory:  /home/joan/Escriptori/TFM/TFM/director/111
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for metadata_directory:  /home/joan/Escriptori/TFM/TFM/director/111/metadata.staged
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for targets_directory:  /home/joan/Escriptori/TFM/TFM/director/111/targets
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for repository_name:  111
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Setting the top-level roles
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for self._rolename:  root
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for self._repository_name:  111
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for rolename:  root
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for roleinfo:  {u'partial_loaded': False, u'signatures': [], u'consistent_snapshot': False, u'version': 0, u'keyids': [], u'threshold': 1, u'compressions': [u''], u'expires': u'2021-01-30T22:59:40Z', u'signing_keyids': []}
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for repository_name:  111
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for self.root:  <tuf.repository_tool.Root object at 0x7f27de90f910>
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for rolename:  snapshot
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for roleinfo:  {u'partial_loaded': False, u'signatures': [], u'version': 0, u'keyids': [], u'threshold': 1, u'compressions': [u''], u'expires': u'2020-02-07T17:11:20Z', u'signing_keyids': []}
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for repository_name:  111
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for self.snapshot:  <tuf.repository_tool.Snapshot object at 0x7f27de90f710>
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for rolename:  timestamp
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for roleinfo:  {u'partial_loaded': False, u'signatures': [], u'version': 0, u'keyids': [], u'threshold': 1, u'compressions': [u''], u'expires': u'2020-02-01T17:11:20Z', u'signing_keyids': []}
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for repository_name:  111
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for self.timestamp:  <tuf.repository_tool.Timestamp object at 0x7f27de90fb10>
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for rolename:  targets
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for roleinfo:  {u'signatures': [], u'keyids': [], u'expires': u'2020-05-02T00:38:30Z', u'threshold': 1, u'signing_keyids': [], u'paths': {}, u'partial_loaded': False, u'version': 0, u'compressions': [u''], u'delegations': {u'keys': {}, u'roles': []}, u'path_hash_prefixes': []}
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for repository_name:  111
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for self.targets:  <tuf.repository_tool.Targets object at 0x7f27de90fa50>
	[demo/demo_director.py]	>>Function:  [clean_slate()]: Adding new vehicle to director instance with vin: 112
	--------> [tuf/repository_tool.py]
			>>Function:  Checking format for: 112

	--------> [tuf/repository_tool.py]
			>>Function:  Setting the repository, metadata (as None) and targets direcotires (as None) for: 112

	--------> [tuf/repository_tool.py]
			>>Function:  Creating repository: /home/joan/Escriptori/TFM/TFM/director/112

Creating u'/home/joan/Escriptori/TFM/TFM/director/112'
	--------> [tuf/repository_tool.py]
			>>Function:  Setting the metadata and targets directories: 
				metadata:metadata.staged
				targets:targets

	--------> [tuf/repository_tool.py]
			>>Function:  Creating the metadata directory that will hold all of the metadata files, such as 'root.json' at:
				/home/joan/Escriptori/TFM/TFM/director/112/metadata.staged

Creating u'/home/joan/Escriptori/TFM/TFM/director/112/metadata.staged'
	--------> [tuf/repository_tool.py]
			>>Function:  Creating the targets directory that will hold all of the targets files at:
				/home/joan/Escriptori/TFM/TFM/director/112/targets

Creating u'/home/joan/Escriptori/TFM/TFM/director/112/targets'
	--------> [tuf/repository_tool.py]
			>>Function:  Create the bare bones repository object, where only top-level roles have been set and contain default values (e.g., Root roles has a threshold of 1, expires 1 year into the future, etc...)

	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for repository_directory:  /home/joan/Escriptori/TFM/TFM/director/112
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for metadata_directory:  /home/joan/Escriptori/TFM/TFM/director/112/metadata.staged
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for targets_directory:  /home/joan/Escriptori/TFM/TFM/director/112/targets
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for repository_name:  112
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Setting the top-level roles
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for self._rolename:  root
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for self._repository_name:  112
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for rolename:  root
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for roleinfo:  {u'partial_loaded': False, u'signatures': [], u'consistent_snapshot': False, u'version': 0, u'keyids': [], u'threshold': 1, u'compressions': [u''], u'expires': u'2021-01-30T22:59:40Z', u'signing_keyids': []}
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for repository_name:  112
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for self.root:  <tuf.repository_tool.Root object at 0x7f27de90f6d0>
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for rolename:  snapshot
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for roleinfo:  {u'partial_loaded': False, u'signatures': [], u'version': 0, u'keyids': [], u'threshold': 1, u'compressions': [u''], u'expires': u'2020-02-07T17:11:20Z', u'signing_keyids': []}
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for repository_name:  112
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for self.snapshot:  <tuf.repository_tool.Snapshot object at 0x7f27de90fd90>
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for rolename:  timestamp
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for roleinfo:  {u'partial_loaded': False, u'signatures': [], u'version': 0, u'keyids': [], u'threshold': 1, u'compressions': [u''], u'expires': u'2020-02-01T17:11:20Z', u'signing_keyids': []}
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for repository_name:  112
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for self.timestamp:  <tuf.repository_tool.Timestamp object at 0x7f27de90f990>
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for rolename:  targets
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for roleinfo:  {u'signatures': [], u'keyids': [], u'expires': u'2020-05-02T00:38:30Z', u'threshold': 1, u'signing_keyids': [], u'paths': {}, u'partial_loaded': False, u'version': 0, u'compressions': [u''], u'delegations': {u'keys': {}, u'roles': []}, u'path_hash_prefixes': []}
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for repository_name:  112
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for self.targets:  <tuf.repository_tool.Targets object at 0x7f27de90f9d0>
	[demo/demo_director.py]	>>Function:  [clean_slate()]: Adding new vehicle to director instance with vin: 113
	--------> [tuf/repository_tool.py]
			>>Function:  Checking format for: 113

	--------> [tuf/repository_tool.py]
			>>Function:  Setting the repository, metadata (as None) and targets direcotires (as None) for: 113

	--------> [tuf/repository_tool.py]
			>>Function:  Creating repository: /home/joan/Escriptori/TFM/TFM/director/113

Creating u'/home/joan/Escriptori/TFM/TFM/director/113'
	--------> [tuf/repository_tool.py]
			>>Function:  Setting the metadata and targets directories: 
				metadata:metadata.staged
				targets:targets

	--------> [tuf/repository_tool.py]
			>>Function:  Creating the metadata directory that will hold all of the metadata files, such as 'root.json' at:
				/home/joan/Escriptori/TFM/TFM/director/113/metadata.staged

Creating u'/home/joan/Escriptori/TFM/TFM/director/113/metadata.staged'
	--------> [tuf/repository_tool.py]
			>>Function:  Creating the targets directory that will hold all of the targets files at:
				/home/joan/Escriptori/TFM/TFM/director/113/targets

Creating u'/home/joan/Escriptori/TFM/TFM/director/113/targets'
	--------> [tuf/repository_tool.py]
			>>Function:  Create the bare bones repository object, where only top-level roles have been set and contain default values (e.g., Root roles has a threshold of 1, expires 1 year into the future, etc...)

	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for repository_directory:  /home/joan/Escriptori/TFM/TFM/director/113
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for metadata_directory:  /home/joan/Escriptori/TFM/TFM/director/113/metadata.staged
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for targets_directory:  /home/joan/Escriptori/TFM/TFM/director/113/targets
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for repository_name:  113
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Setting the top-level roles
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for self._rolename:  root
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for self._repository_name:  113
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for rolename:  root
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for roleinfo:  {u'partial_loaded': False, u'signatures': [], u'consistent_snapshot': False, u'version': 0, u'keyids': [], u'threshold': 1, u'compressions': [u''], u'expires': u'2021-01-30T22:59:40Z', u'signing_keyids': []}
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for repository_name:  113
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for self.root:  <tuf.repository_tool.Root object at 0x7f27de90f450>
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for rolename:  snapshot
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for roleinfo:  {u'partial_loaded': False, u'signatures': [], u'version': 0, u'keyids': [], u'threshold': 1, u'compressions': [u''], u'expires': u'2020-02-07T17:11:20Z', u'signing_keyids': []}
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for repository_name:  113
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for self.snapshot:  <tuf.repository_tool.Snapshot object at 0x7f27de90f490>
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for rolename:  timestamp
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for roleinfo:  {u'partial_loaded': False, u'signatures': [], u'version': 0, u'keyids': [], u'threshold': 1, u'compressions': [u''], u'expires': u'2020-02-01T17:11:20Z', u'signing_keyids': []}
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for repository_name:  113
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for self.timestamp:  <tuf.repository_tool.Timestamp object at 0x7f27de90fc50>
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for rolename:  targets
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for roleinfo:  {u'signatures': [], u'keyids': [], u'expires': u'2020-05-02T00:38:30Z', u'threshold': 1, u'signing_keyids': [], u'paths': {}, u'partial_loaded': False, u'version': 0, u'compressions': [u''], u'delegations': {u'keys': {}, u'roles': []}, u'path_hash_prefixes': []}
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for repository_name:  113
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for self.targets:  <tuf.repository_tool.Targets object at 0x7f27de90fcd0>
	[demo/demo_director.py]	>>Function:  [clean_slate()]: Adding new vehicle to director instance with vin: democar
	--------> [tuf/repository_tool.py]
			>>Function:  Checking format for: democar

	--------> [tuf/repository_tool.py]
			>>Function:  Setting the repository, metadata (as None) and targets direcotires (as None) for: democar

	--------> [tuf/repository_tool.py]
			>>Function:  Creating repository: /home/joan/Escriptori/TFM/TFM/director/democar

Creating u'/home/joan/Escriptori/TFM/TFM/director/democar'
	--------> [tuf/repository_tool.py]
			>>Function:  Setting the metadata and targets directories: 
				metadata:metadata.staged
				targets:targets

	--------> [tuf/repository_tool.py]
			>>Function:  Creating the metadata directory that will hold all of the metadata files, such as 'root.json' at:
				/home/joan/Escriptori/TFM/TFM/director/democar/metadata.staged

Creating u'/home/joan/Escriptori/TFM/TFM/director/democar/metadata.staged'
	--------> [tuf/repository_tool.py]
			>>Function:  Creating the targets directory that will hold all of the targets files at:
				/home/joan/Escriptori/TFM/TFM/director/democar/targets

Creating u'/home/joan/Escriptori/TFM/TFM/director/democar/targets'
	--------> [tuf/repository_tool.py]
			>>Function:  Create the bare bones repository object, where only top-level roles have been set and contain default values (e.g., Root roles has a threshold of 1, expires 1 year into the future, etc...)

	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for repository_directory:  /home/joan/Escriptori/TFM/TFM/director/democar
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for metadata_directory:  /home/joan/Escriptori/TFM/TFM/director/democar/metadata.staged
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for targets_directory:  /home/joan/Escriptori/TFM/TFM/director/democar/targets
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for repository_name:  democar
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Setting the top-level roles
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for self._rolename:  root
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for self._repository_name:  democar
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for rolename:  root
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for roleinfo:  {u'partial_loaded': False, u'signatures': [], u'consistent_snapshot': False, u'version': 0, u'keyids': [], u'threshold': 1, u'compressions': [u''], u'expires': u'2021-01-30T22:59:40Z', u'signing_keyids': []}
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for repository_name:  democar
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for self.root:  <tuf.repository_tool.Root object at 0x7f27de90f790>
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for rolename:  snapshot
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for roleinfo:  {u'partial_loaded': False, u'signatures': [], u'version': 0, u'keyids': [], u'threshold': 1, u'compressions': [u''], u'expires': u'2020-02-07T17:11:20Z', u'signing_keyids': []}
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for repository_name:  democar
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for self.snapshot:  <tuf.repository_tool.Snapshot object at 0x7f27de90fb50>
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for rolename:  timestamp
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for roleinfo:  {u'partial_loaded': False, u'signatures': [], u'version': 0, u'keyids': [], u'threshold': 1, u'compressions': [u''], u'expires': u'2020-02-01T17:11:20Z', u'signing_keyids': []}
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for repository_name:  democar
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for self.timestamp:  <tuf.repository_tool.Timestamp object at 0x7f27de90fa10>
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for rolename:  targets
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for roleinfo:  {u'signatures': [], u'keyids': [], u'expires': u'2020-05-02T00:38:30Z', u'threshold': 1, u'signing_keyids': [], u'paths': {}, u'partial_loaded': False, u'version': 0, u'compressions': [u''], u'delegations': {u'keys': {}, u'roles': []}, u'path_hash_prefixes': []}
	--------> [tuf/roledb.py]
			>>Function:  [addRole()]:  Value for repository_name:  democar
	--------> [tuf/repository_tool.py]
			>>Function:  [Repository.__init__]:  Value for self.targets:  <tuf.repository_tool.Targets object at 0x7f27de90fe90>
	[demo/demo_director.py]	>>Function:  [clean_slate()]: Adding first files
Director: Signing and hosting initial repository metadata
u'timestamp.der' expires Sat Feb  1 17:11:20 2020 (UTC).
1.0 day(s) until it expires.
u'timestamp.der' expires Sat Feb  1 17:11:20 2020 (UTC).
1.0 day(s) until it expires.
u'timestamp.der' expires Sat Feb  1 17:11:20 2020 (UTC).
1.0 day(s) until it expires.
u'timestamp.der' expires Sat Feb  1 17:11:20 2020 (UTC).
1.0 day(s) until it expires.
Director: Director repo server process started, with pid 4089, serving on port 30401. Director repo URL is: 0.0.0.0:30401/
Director: Starting Director Services Thread: will now listen on port 30501
Timeserver: Loading timeserver signing key.
	-------->[demo/__init__.py]
			>>Action Perfomed:  Calling rt.import_ed25519_privatekey_from_file

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Checking format for
				/home/joan/Escriptori/TFM/TFM/demo/keys/timeserver
				Password? pw

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Checking password: 'pw' have the correct format

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Store the encrypted contents of '/home/joan/Escriptori/TFM/TFM/demo/keys/timeserver' prior to calling the decryption routine

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Encrypted content of: '/home/joan/Escriptori/TFM/TFM/demo/keys/timeserver': 
				4448db87c1fcda5be528380681ee3ce8@@@@100000@@@@a007777e85a5c55be38dff2f9e477a35bd2c302983250c4f0a9bac7ec382efcb@@@@67eb0293475d14ff806a1c654e4e0a5c@@@@702c06e273ffe0afee3e89020e8af6daadf709a5234b4af7ab2465ff28590633bbd71e3bf5860284748d1f447f60478c1ed04931e2341fdece463500f59b4dcb55cae59abe80c5d59f58dad1417baf0cf0e6b0079219bbbc5358f64fe0bff3f050ff4b323ff9f86108501e9f4d9259203613e712c054e4dce54c0c94f5b4b32ef567970d185ff0ac33e2afa5b4415a5b2f91ed38cc06b91993486374356e75374f4fbffc21fbf522229b1ad0e5844dc4b044c81bac027a66ff76c4c56c1819827e46bb07e59141154e3001ed02accde18fc4f96471aa3ac3896fb279bb9bd1c6c7f02defeab9c8693ed5c7291617f87183ad9a89165d8d31ece5d526bd32844d3da2588ea86009a7fe79d5f0

Serving HTTP on 0.0.0.0 port 30401 ...
	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   Decrypted content of: ' /home/joan/Escriptori/TFM/TFM/demo/keys/timeserver ':  {u'keytype': u'ed25519', u'keyid': u'79c796d7e87389d1ebad04edce49faef611d139ee41ea9fb1931732afbfaac2e', u'keyval': {u'public': u'5d7750b208dfc7ade8f6106b9c3fa25162d5a184f302161e429f19a79e66a908', u'private': u'4acd179fdf96354b2a114dd354968a1c2ec1569f935260a04140af21e80b9393'}} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   Checking that 'keytype' equals to 'ed25519' 

Timeserver: Timeserver signing key loaded.
	-------->[demo/__init__.py]
			>>Action Perfomed:  Calling rt.import_ed25519_publickey_from_file

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Checking format for
				/home/joan/Escriptori/TFM/TFM/demo/keys/timeserver.pub

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  ED25519 key objects are saved in .json and metadata format.
				Return the loaded key object in tuf.formats.ED25519KEY_SCHEMA format that also includes the keyid

	-------- --------> [tuf/util.py]
			>>Action Perfomed:  Checking format of: /home/joan/Escriptori/TFM/TFM/demo/keys/timeserver.pub

	-------- --------> [tuf/util.py]
			>>Action Perfomed:   Checking whether the file is mostly likely gzipped: False 

	-------- --------> [tuf/util.py]
			>>Action Perfomed:   Loading: <open file u'/home/joan/Escriptori/TFM/TFM/demo/keys/timeserver.pub', mode 'r' at 0x7f27ded7f8a0> 

	-------- --------> [tuf/util.py]
			>>Action Perfomed:   Loading json: {u'keytype': u'ed25519', u'keyid_hash_algorithms': [u'sha256', u'sha512'], u'keyval': {u'public': u'5d7750b208dfc7ade8f6106b9c3fa25162d5a184f302161e429f19a79e66a908'}} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   ed25519_key_metadata:  
				 {u'keytype': u'ed25519', u'keyid_hash_algorithms': [u'sha256', u'sha512'], u'keyval': {u'public': u'5d7750b208dfc7ade8f6106b9c3fa25162d5a184f302161e429f19a79e66a908'}} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   ed25519_key:  
				 {u'keyval': {u'public': u'5d7750b208dfc7ade8f6106b9c3fa25162d5a184f302161e429f19a79e66a908'}, u'keytype': u'ed25519', u'keyid': '79c796d7e87389d1ebad04edce49faef611d139ee41ea9fb1931732afbfaac2e', u'keyid_hash_algorithms': [u'sha256', u'sha512']} 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:   junk:  
				 set(['79c796d7e87389d1ebad04edce49faef611d139ee41ea9fb1931732afbfaac2e', '1d9360d4396237b15e149b8ab91924ecc1dae3b58e54d409edb8273fbfb2ebb9e28d4e034545edc709f965f97d207e9fe0ea44cf5c63bc95ad67473136250adf']) 

	--------> [tuf/repository_lib.py]
			>>Action Perfomed:  Returning the key: {u'keyval': {u'public': u'5d7750b208dfc7ade8f6106b9c3fa25162d5a184f302161e429f19a79e66a908'}, u'keytype': u'ed25519', u'keyid': '79c796d7e87389d1ebad04edce49faef611d139ee41ea9fb1931732afbfaac2e', u'keyid_hash_algorithms': [u'sha256', u'sha512']}
Timeserver: Timeserver will now listen on port 30601
>>> 

